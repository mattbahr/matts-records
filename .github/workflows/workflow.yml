name: Docker Images CI/CD
on:
  push:
    branches: [main]
permissions:
  contents: read
  packages: write
env:
  B2_AUTH_URI: ${{ vars.B2_AUTH_URI }}
  BACKBLAZE_APP_KEY: ${{ secrets.BACKBLAZE_APP_KEY }}
  BACKBLAZE_KEY_ID: ${{ secrets.BACKBLAZE_KEY_ID }}
  MONGODB_BASIC_USERNAME: ${{ secrets.MONGODB_BASIC_USERNAME }}
  MONGODB_BASIC_PASSWORD: ${{ secrets.MONGODB_BASIC_PASSWORD }}
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGODB_ROOT_USERNAME }}
      MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGODB_ROOT_PASSWORD }}
      EXPRESS_URI: ${{ vars.TEST_RUNNER_EXPRESS_URI }}
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
      - name: Set Up Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install Playwright Dependencies
        run: cd playwright && npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps && cd ..
      - name: Modify Mongo Init Script to Add User
        run: bash ./scripts/modify_db_init_script.sh
      - name: Write Server Secrets
        run: bash ./scripts/write_server_secrets.sh
      - name: Write Server Env File
        run: bash ./scripts/write_server_env.sh
      - name: Write Client Env File
        run: bash ./scripts/write_env_json.sh
      - name: Start Containers
        run: docker compose -f ./docker-compose.ci.yml up -d
      - name: Test Server
        run: docker exec app-server npm run test:ci
      - name: Test Client
        run: docker exec app-client npm run test:ci
      - name: E2E Test
        run: cd playwright && npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  publish:
    name: Publish
    needs: test
    runs-on: ubuntu-latest
    env:
      EXPRESS_URI: ${{ vars.PROD_EXPRESS_URI }}
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4
      - name: Write Server Env File
        run: bash ./scripts/write_server_env.sh
      - name: Write Client Env File
        run: bash ./scripts/write_env_json.sh
      - name: Build Docker Images
        run: docker compose build
      - name: Github Container Registry Login
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin ghcr.io
      - name: Tag Express Server Docker Image
        run: docker tag random-records-app-server ghcr.io/${{ github.repository_owner}}/random-records-app-server:latest
      - name: Tag React Client Docker Image
        run: docker tag random-records-app-client ghcr.io/${{ github.repository_owner}}/random-records-app-client:latest
      - name: Push Express Server Docker Image
        run: docker push ghcr.io/${{ github.repository_owner}}/random-records-app-server:latest
      - name: Push React Client Docker Image
        run: docker push ghcr.io/${{ github.repository_owner}}/random-records-app-client:latest
